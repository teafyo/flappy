class Flappy {
	field int x, y, r;
	field int speed;
	
	// create a new flappy at position fx, fy, with radius fr, and flap speed fspeed
	constructor Flappy new(int fx, int fy, int fr, int fspeed) {
		let x = fx;
		let y = fy;
		let r = fr;
		let speed = fspeed;
		do draw();
		return this;
	}

	method void draw() {
		do Screen.setColor(true);
		do Screen.drawCircle(x, y, r);
		return;
	}
	
	method void erase() {
		do Screen.setColor(true);
		do Screen.drawCircle(x, y, r);
		return;
	}

	method int getX() {
		return x;
	}

	method int getY() {
		return y;
	}
	//flap function
	method void flap() {
		if (y > 12) { 
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, r); // draw over the old circle
			let y = y - speed;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, r); // draw the new circle
		}
		return;
	}

	//gravity function, similar to flap but has parameter fallSpeed to account for acceleration
	method void gravity(int fallSpeed) {
		if (y < 244) {
			do Screen.setColor(false);
			do Screen.drawCircle(x, y, r);
			let y = y + fallSpeed;
			do Screen.setColor(true);
			do Screen.drawCircle(x, y, r);
		}
		else {

		}
		return;
	}

	method void dispose() {
      do Memory.deAlloc(this);
      return;
   }
}