class FlappyGame {
	field Flappy flappy; //flappy
	field int thisScore, lastScore; // score, increments whenever a pipe touches the left
	field int flapBuffer; // buffers gravity for flap
	field int flapRelease; // waits for the up arrow to be released before another flap
	field int gravSpeed; // speed of gravity when not flapping
	field boolean play; // controls game state, where true means the game is running
	field int speedCounter; //controls pipe speed increments
	field int level; //level counter, indicated difficulty of the game
	
	constructor FlappyGame new() {
		do Screen.clearScreen();
		let flappy = Flappy.new(16, 128, 8, 4);
		let lastScore = -1;
		let thisScore = 0;
		let play = true;
		return this;
	}

	method void run() {
		var char key;
		var Pipes Pipe1, Pipe2, Pipe3;
		//Arbitrary random start seed (for game to be truly random, this number would need to be randomly generated).
		do Random.setSeed(2234);

		//Initialize Pipes
		let Pipe1 = Pipes.new(160);
		let Pipe2 = Pipes.new(320);
		let Pipe3 = Pipes.new(480);

		let flapBuffer = 0;
		let flapRelease = 0;
		let gravSpeed = 2;
		let speedCounter = 0;
		let level = 1;
		do Output.moveCursor(0, 15);
		do Output.printString("Level: ");	
		do Output.printInt(level);
		while (play){
			do Sys.wait(25);
			// move pipes
			do Pipe1.move();
			do Pipe2.move();
			do Pipe3.move();

			//Check for loss condition (does flappy touch a pipe?)
			if Pipe1.getX() = flappy.getX() + flappy.getR() {
				if flappy.getY() < Pipe1.getOpeningBottom() | if flappy.getY() > Pipe1.getOpeningTop() {
					let play = false;
				}
			}
			else if Pipe2.getX() = flappy.getX() + flappy.getR() {
				if flappy.getY() < Pipe2.getOpeningBottom() | if flappy.getY() > Pipe2.getOpeningTop() {
					let play = false;
				}
			}
			else if Pipe3.getX() = flappy.getX() + flappy.getR() {
				if flappy.getY() < Pipe3.getOpeningBottom() | if flappy.getY() > Pipe3.getOpeningTop() {
					let play = false;
				}
			}
		
			//Update score if appropriate
			let thisScore = Pipe1.getScore() + Pipe2.getScore() + Pipe3.getScore();
			if (thisScore > lastScore) {

				do Output.moveCursor(0, 1);
				do Output.printString("Score: ");	
				do Output.printInt(thisScore);
				let lastScore = thisScore;
				let speedCounter = speedCounter + 1;
				if (speedCounter > 5) {
					let speedCounter = 0;
					do Pipe1.increaseSpeed();
					do Pipe2.increaseSpeed();
					do Pipe3.increaseSpeed();
					let level = level + 1;
					do Output.moveCursor(0, 15);
					do Output.printString("Level: ");	
					do Output.printInt(level);
				}
			}
			let key = Keyboard.keyPressed();
			
			if ((key = 131) & (flapRelease = 0) & (flapBuffer < 1)) { //check if up arrow is pressed and has been released
				let flapBuffer = 5;
				let gravSpeed = 0;
				let flapRelease = 1;
			}
			if (~(key = 131)) { //if up arrow released, set to 0
				let flapRelease = 0;
			}
			if (flapBuffer > 0) {
				do flappy.flap();
				let flapBuffer = flapBuffer - 1;
			}
			else {
				do flappy.gravity(gravSpeed);
				if (gravSpeed < 5) {
				let gravSpeed = gravSpeed + 1;
				}
			}
			if ((flappy.getY() > 242 )) {
				let play = false;
			}
		}
        do Output.moveCursor(0,27); // Game over code from Pong game
	    do Output.printString("Game Over");
		return;
	}
	
	method void dispose() {
      do flappy.dispose();
      do Memory.deAlloc(this);
      return;
   }
}
			
